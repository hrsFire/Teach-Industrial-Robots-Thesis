@misc{chrome_v8,
    title = {Chrome {V}8},
    url = {https://developers.google.com/v8/},
    abstract = {Google's high performance, open source, JavaScript engine.},
    urldate = {2017-09-09},
    journal = {Google Developers}
}

@book{herron_node.js_2016,
    title = {Node.js {Web} {Development}},
    isbn = {978-1-78588-541-9},
    abstract = {Create real-time server-side applications with this practical, step-by-step guideAbout This BookLearn about server-side JavaScript with Node.js and Node modules through the most up-to-date book on Node.js web developmentUnderstand website development both with and without the Connect/Express web application frameworkDevelop both HTTP server and client applicationsWho This Book Is ForThis book is for anybody looking for an alternative to the "P" languages (Perl, PHP, and Python), or anyone looking for a new paradigm of server-side application development. You should have at least a rudimentary understanding of JavaScript and web application development.What You Will LearnInstall and use Node.js for both development and deploymentUse the Express application frameworkConfigure Bootstrap for mobile-first themingUse data storage engines such as MySQL, SQLITE3, and MongoDBUnderstand user authentication methods, including OAuth, with third-party servicesDeploy Node.js to live servers, including microservice development with DockerPerform unit testing with MochaPerform functional testing of the web application with CasperJSIn DetailNode.js is a server-side JavaScript platform using an event driven, non-blocking I/O model allowing users to build fast and scalable data-intensive applications running in real time. Node.js Web Development shows JavaScript is not just for browser-side applications. It can be used for server-side web application development, real-time applications, microservices, and much more.This book gives you an excellent starting point, bringing you straight to the heart of developing web applications with Node.js. You will progress from a rudimentary knowledge of JavaScript and server-side development to being able to create and maintain your own Node.js application. With this book you'll learn how to use the HTTP Server and Client objects, data storage with both SQL and MongoDB databases, real-time applications with Socket.IO, mobile-first theming with Bootstrap, microservice deployment with Docker, authenticating against third-party services using OAuth, and much more.Style and ApproachThis book is a practical guide for anyone looking to develop striking and robust web applications using Node.js.},
    language = {en},
    publisher = {Packt Publishing Ltd},
    author = {Herron, David},
    month = jun,
    year = {2016},
    keywords = {Computers / Databases / Servers, Computers / Programming Languages / JavaScript, Computers / Web / General},
    pages = {20}
}

@misc{security_eingebauter_nodate,
    title = {Eingebauter {Node}.js-{Server}: {Per} {Nvidia}-{Treiber} lassen sich {Schädlinge} einschleusen},
    shorttitle = {Eingebauter {Node}.js-{Server}},
    url = {http://www.heise.de/security/meldung/Eingebauter-Node-js-Server-Per-Nvidia-Treiber-lassen-sich-Schaedlinge-einschleusen-3691119.html},
    abstract = {Nvidia-Treiber enthalten einen Node.js-Server - keine gute Idee: Damit lassen sich Sicherungsmechanismen wie Application Whitelisting umgehen.},
    urldate = {2017-09-09},
    journal = {Security},
    author = {Security, heise}
}

@book{comer_tcp-ip:_2011,
    title = {{TCP}-{IP}: {Konzepte}, {Protokolle}, {Architekturen}},
    isbn = {978-3-8266-9111-9},
    shorttitle = {{TCP}-{IP}},
    language = {de},
    publisher = {mitp Verlags GmbH \& Co. KG},
    author = {Comer, Douglas},
    year = {2011},
    pages = {387}
}

@misc{capan_why_nodate,
    title = {Why {The} {Hell} {Would} {I} {Use} {Node}.js? {A} {Case}-by-{Case} {Tutorial}},
    shorttitle = {Why {The} {Hell} {Would} {I} {Use} {Node}.js?},
    url = {https://www.toptal.com/nodejs/why-the-hell-would-i-use-node-js},
    abstract = {Node.js was never created to solve the compute scaling problem. It was created to solve the I/O scaling problem. Find out why, with case-by-case tutorial.},
    urldate = {2018-02-05},
    journal = {Toptal Engineering Blog},
    author = {Capan, Tomislav},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/TIYNK46G/why-the-hell-would-i-use-node-js.html:text/html}
}

@book{trelle_mongodb:_2014,
    title = {{MongoDB}: {Der} praktische {Einstieg}},
    isbn = {978-3-86491-534-5},
    shorttitle = {{MongoDB}},
    abstract = {MongoDB ist die derzeit populärste dokumentenorientierte Datenbank im NoSQL-Bereich. Während klassische Datenbankmanagementsysteme bei großen Datenmengen an Skalierungs- und Leistungsgrenzen stoßen, kann MongoDB auch im Petabyte-Bereich und darüber noch effizient arbeiten und bietet viele Features, die die Verarbeitung von Big Data erleichtern. Kompakt und anhand von zahlreichen Beispielen führt Sie dieses Buch in die Nutzung von MongoDB ein. Es beginnt mit einem Schnellstart, in dem Sie MongoDB installieren und erste Erfahrungen im Umgang mit semistrukturierten Daten und den Vorteilen der Schemafreiheit sammeln. Darauf aufbauend behandelt das Buch u.a. folgende Themen: - Collections \& Dokumente - Queries \& Indizes - Replikation (Ausfallsicherheit) - Sharding (horizontale Skalierung) - Schema-Design - Map/Reduce - Aggregation Framework Darüber hinaus bietet das Buch am Beispiel der Programmiersprachen Java und Ruby Praxistipps zur Verwendung des API von MongoDB. Nach der Lektüre können Sie einschätzen, in welchen komplexeren Anwendungsfällen sich der Einsatz von MongoDB lohnt, Sie kennen alle wichtigen Features und sind in der Lage, eigene MongoDB-Anwendungen zu erstellen.},
    language = {de},
    publisher = {dpunkt.verlag},
    author = {Trelle, Tobias},
    month = jul,
    year = {2014},
    note = {Google-Books-ID: js9NDAAAQBAJ},
    keywords = {Computers / Databases / General},
    pages = {1--8}
}

@misc{noauthor_mongodb_schema_nodate,
    title = {Schema {Validation} — {MongoDB} {Manual} 3.6},
    url = {https://docs.mongodb.com/manual/core/schema-validation},
    language = {en},
    urldate = {2018-02-26},
    journal = {https://github.com/mongodb/docs/blob/master/source/core/schema-validation.txt},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/YM8GGFVF/schema-validation.html:text/html}
}

@misc{nodejs_api_doc,
    title = {Index {\textbar} {Node}.js v9.6.1 {Documentation}},
    url = {https://nodejs.org/dist/latest-v9.x/docs/api/index.html},
    urldate = {2018-02-27},
    file = {Index | Node.js v9.6.1 Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/XVICRMG5/index.html:text/html}
}

@misc{v8_wikipedia_2017,
    title = {V8 ({JavaScript}-{Implementierung})},
    copyright = {Creative Commons Attribution-ShareAlike License},
    url = {https://de.wikipedia.org/w/index.php?title=V8_(JavaScript-Implementierung)&oldid=172189740},
    abstract = {V8 ist eine freie Implementierung der Skriptsprache ECMAScript (JavaScript) nach dem Standard ECMA-262. Sie wird vom Unternehmen Google Inc. unter einer BSD-Lizenz als freie Software veröffentlicht. Ausgeliefert wird sie als Teil des Webbrowsers Google Chrome, kann jedoch auch unabhängig davon verwendet werden. V8 soll die Ausführung von JavaScript-Code beschleunigen.
V8 wird von Googles V8-Team unter der Leitung von Lars Bak hauptsächlich in Googles Forschungslabor in Aarhus (Dänemark) entwickelt, das mit der Universität Aarhus zusammen Forschung an und Entwicklung von virtuellen Maschinen betreibt.},
    language = {de},
    urldate = {2018-02-27},
    journal = {Wikipedia},
    month = dec,
    year = {2017},
    note = {Page Version ID: 172189740},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/5X7KZX8P/index.html:text/html}
}

@misc{libuv_offical_site,
    title = {Welcome to the libuv documentation — libuv documentation},
    url = {http://docs.libuv.org/en/v1.x/},
    urldate = {2018-02-27},
    file = {Welcome to the libuv documentation — libuv documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/3ZH7TVWP/v1.html:text/html}
}

@misc{node_js_architektur_stack_overflow,
    title = {javascript - {Which} is correct {Node}.js architecture? - {Stack} {Overflow}},
    url = {https://stackoverflow.com/questions/36766696/which-is-correct-node-js-architecture/37512766},
    urldate = {2018-02-27},
    file = {javascript - Which is correct Node.js architecture? - Stack Overflow:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/DINEVDCX/37512766.html:text/html}
}

@misc{node_js_delft_student,
    title = {Node · {Delft} {Students} on {Software} {Architecture}: {DESOSA} 2017},
    url = {https://delftswa.gitbooks.io/desosa-2017/content/node/chapter.html},
    urldate = {2018-02-27},
    file = {Node · Delft Students on Software Architecture\: DESOSA 2017:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/3LXPVACV/chapter.html:text/html}
}

@misc{google_trends_for_nodejs,
    title = {Google {Trends}},
    url = {https://trends.google.com/trends/explore?date=2009-01-01%202018-02-28&q=Node.js},
    abstract = {Suchinteresse für "Node.js" nach Zeitraum, Ort und Beliebtheit bei Google Trends erkunden},
    urldate = {2018-02-28},
    journal = {Google Trends},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/PRDGTX3H/explore.html:text/html}
}

@misc{express-middleware_nodate,
    title = {Express-{Middleware} verwenden},
    url = {http://expressjs.com/de/guide/using-middleware.html},
    urldate = {2018-02-28},
    file = {Express-Middleware verwenden:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/M87IBQ6Q/using-middleware.html:text/html}
}

@misc{loopback_github:_2018,
    title = {loopback: {LoopBack} makes it easy to build modern applications that require complex integrations},
    shorttitle = {loopback},
    url = {https://github.com/strongloop/loopback},
    urldate = {2018-02-28},
    publisher = {StrongLoop and IBM API Connect},
    month = feb,
    year = {2018},
    note = {original-date: 2013-04-09T16:02:18Z},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/NS8L8FYB/loopback.html:text/html}
}

@misc{keymetrics_nodate,
    title = {Monitoring · {PM}2},
    url = {https://pm2.keymetrics.io/},
    abstract = {Advanced process manager for production Node.js applications. Load balancer, logs facility, startup script, micro service management, at a glance.},
    language = {en},
    urldate = {2018-03-03},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/7P4VPGUV/monitoring.html:text/html}
}

@misc{pm2_official_site,
    title = {{PM}2 ·},
    url = {https://pm2.keymetrics.io/},
    abstract = {Advanced process manager for production Node.js applications. Load balancer, logs facility, startup script, micro service management, at a glance.},
    language = {en},
    urldate = {2018-02-28},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/6I8NJWMI/pm2.keymetrics.io.html:text/html}
}

@misc{ruby_on_rails_limitations,
    title = {Limitations in running {Ruby}/{Rails} on windows - {Stack} {Overflow}},
    url = {https://stackoverflow.com/questions/164896/limitations-in-running-ruby-rails-on-windows},
    language = {en},
    urldate = {2018-03-04},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/AD7QQPKY/limitations-in-running-ruby-rails-on-windows.html:text/html}
}

@misc{react_native_js_runtime,
    title = {{JavaScript} {Environment} · {React} {Native}},
    url = {https://facebook.github.io/react-native/index.html},
    abstract = {\#\# JavaScript Runtime},
    language = {en},
    urldate = {2018-03-26},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/KZ93FYWA/javascript-environment.html:text/html}
}

@misc{mean_node_js_event_loop,
    title = {{MEAN} {Stack} {Application} {Development} {Company} in {India} {\textbar} {Hire} {MEAN} {Stack} {Developers} {India}.},
    url = {https://www.angularminds.com/mean-stack-application-development.html},
    urldate = {2018-03-28},
    file = {MEAN Stack Application Development Company in India | Hire MEAN Stack Developers India.:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/PBRWIX2F/mean-stack-application-development.html:text/html}
}

@book{dickey_write_2014,
    title = {Write {Modern} {Web} {Apps} with the {MEAN} {Stack}: {Mongo}, {Express}, {AngularJS}, and {Node}.js},
    isbn = {978-0-13-396237-6},
    shorttitle = {Write {Modern} {Web} {Apps} with the {MEAN} {Stack}},
    abstract = {Traditionally, web applications have been architected so that the back-end houses all the front-end code. This has resulted in heavy projects that are difficult to manage and scale. This book will explain a new way to write web applications by treating the front-end as if it were a third-party (such as a mobile client). This book, written by a practicing MEAN developer, will take a holistic approach to using the MEAN JavaScript platform for creating modern web applications and lay out how to use the MEAN (Mongo, Express, AngularJS, and Node.js) set of tools to create a web application, from installation and setup of the tools to debugging and deploying your app. After an introduction to how web development is changing and the advantages of using the MEAN stack, the author jumps into an introduction to each tool and then dives into using the complete JavaScript-based application stack to build, test, and deploy apps.},
    language = {en},
    publisher = {Peachpit Press},
    author = {Dickey, Jeff},
    month = sep,
    year = {2014},
    keywords = {Computers / Programming Languages / JavaScript, Computers / Web / Design},
    pages = {15--16}
}

@misc{loopback_boot_2018,
    title = {Defining boot scripts {\textbar} {LoopBack} {Documentation}},
    url = {https://loopback.io/doc/en/lb2/Defining-boot-scripts},
    urldate = {2018-04-01},
    file = {Defining boot scripts | LoopBack Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/B8W666KE/Defining-boot-scripts.html:text/html}
}

@misc{loopback_authentication_2018,
    title = {Authentication, authorization, and permissions {\textbar} {LoopBack} {Documentation}},
    url = {https://loopback.io/doc/en/lb3/Authentication-authorization-and-permissions.html},
    urldate = {2018-04-01},
    file = {Authentication, authorization, and permissions | LoopBack Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/CN43F4VS/Authentication-authorization-and-permissions.html:text/html}
}

@misc{middleware.json_2018,
    title = {middleware.json {\textbar} {LoopBack} {Documentation}},
    url = {https://loopback.io/doc/en/lb3/middleware.json.html},
    urldate = {2018-04-01},
    file = {middleware.json | LoopBack Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/JVHMB8MR/middleware.json.html:text/html}
}

@misc{middleware.development.json_2018,
    title = {middleware.development.json {\textbar} {LoopBack} {Documentation}},
    url = {https://loopback.io/doc/en/lb3/middleware.development.json.html},
    urldate = {2018-04-01},
    file = {middleware.development.json | LoopBack Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/YKNYYZGD/middleware.development.json.html:text/html}
}

@misc{hablich_high-performance_2018,
    title = {High-performance {ES}2015 and beyond},
    url = {https://v8project.blogspot.com/2017/02/high-performance-es2015-and-beyond.html},
    abstract = {A blog by the V8 team for JavaScript enthusiast that want to get a glimpse 'under the hood' of Chrome's JavaScript engine.},
    urldate = {2018-04-01},
    author = {Hablich, Michael},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/ICVN6V5F/high-performance-es2015-and-beyond.html:text/html}
}

@misc{google_preise_maps_api,
    title = {Preise und {Nutzungsmodelle} {\textbar} {Preise} und {Nutzungsmodelle} für {Google} {Maps} {APIs}},
    url = {https://developers.google.com/maps/pricing-and-plans/?hl=de},
    abstract = {Vergleichen Ihrer Google Maps API-Optionen},
    language = {de},
    urldate = {2018-04-22},
    journal = {Google Developers},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/K6UK432A/pricing-and-plans.html:text/html}
}

@article{springer_turbolader:_2018,
    title = {Turbolader: {Microservices} mit {Node}.js},
    volume = {1},
    journal = {iX},
    author = {Springer, Sebastian},
    year = {2018},
    pages = {118--124}
}

@misc{loopback_mongodb_connector,
    title = {{MongoDB} connector {\textbar} {LoopBack} {Documentation}},
    url = {https://loopback.io/doc/en/lb3/MongoDB-connector},
    urldate = {2018-05-03},
    file = {MongoDB connector | LoopBack Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/6M9WDXAX/MongoDB-connector.html:text/html}
}

@misc{loopback_modules_overview,
    title = {{LoopBack} 3.x {\textbar} {LoopBack} {Documentation}},
    url = {https://loopback.io/doc/en/lb3/},
    urldate = {2018-05-03},
    file = {LoopBack 3.x | LoopBack Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/PVFRNJ3A/lb3.html:text/html}
}

@misc{node_js_file,
    title = {File {System} {\textbar} {Node}.js v10.0.0 {Documentation}},
    url = {https://nodejs.org/api/fs.html},
    urldate = {2018-05-03},
    file = {File System | Node.js v10.0.0 Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/DKS8H424/fs.html:text/html}
}

@misc{node_js_child_process,
    title = {Child {Process} {\textbar} {Node}.js v10.0.0 {Documentation}},
    url = {https://nodejs.org/api/child_process.html},
    urldate = {2018-05-03},
    file = {Child Process | Node.js v10.0.0 Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/4Q9SSK34/child_process.html:text/html}
}

@misc{amazon_what_are_microservices,
    title = {What are {Microservices}? {\textbar} {AWS}},
    url = {https://aws.amazon.com/de/microservices/},
    urldate = {2018-05-03},
    file = {What are Microservices? | AWS:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/Z6VFCPY4/microservices.html:text/html}
}

@misc{schonbach_nutzer-authentifizierung_nodate,
    title = {Nutzer-{Authentifizierung} in {Microservice}-{Umgebungen}},
    url = {https://www.heise.de/developer/artikel/Nutzer-Authentifizierung-in-Microservice-Umgebungen-3651632.html},
    abstract = {Das Einloggen auf einer Webseite sollte sich einfach gestalten, wenn eine monolithische Architektur im Hintergrund ihren Dienst verrichtet. Was aber, wenn die Webseite von vielen Microservices befeuert wird? Woher wissen diese, dass die Nutzer die sind, die sie vorgeben zu sein? Hierfür können JSON Web Tokens eine sichere und performante Lösung sein.},
    language = {de},
    urldate = {2018-05-06},
    journal = {heise Developer},
    author = {Schönbach, Bernd},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/3VZRVHYN/Nutzer-Authentifizierung-in-Microservice-Umgebungen-3651632.html:text/html}
}

@book{ihrig_pro_2013,
    title = {Pro {Node}.js for {Developers}},
    isbn = {978-1-4302-5860-5},
    abstract = {Since it’s creation in 2009, Node.js has grown into a powerful and increasingly popular asynchronous-development framework for creating highly-scalable network applications using JavaScript. Respected companies such as Dow Jones and LinkedIn are among the many organizations to have seen Node’s potential and adopted it into their businesses.Pro Node.js for Developers provides a comprehensive guide to this exciting new technology. We introduce you to Node – what it is, why it matters and how to set it up – before diving deeply into the key concepts and APIs that underpin its operation.Building upon your existing JavaScript skills you’ll be shown how to use Node.js to build both Web- and Network-based applications, to deal with data sources, capture events and deal with child processes to create robust applications that will work well in a wide range of circumstances.Once you\&\#39;ve mastered these skills we’ll go further, teaching you more advanced software engineering skills that will give your code a professional edge. You’ll learn how to create easily reusable modules that will save you time through code reuse, to log and debug your applications quickly and effectively and to write code that will scale easily and reliably as the demand for your application grows.  What you’ll learn Install, configure and deploy Node.js apps effectively  Understand the Node.js asynchronous programming model in detail  Create both web and network-based Node.js applications with ease  Learn to work effectively with varied data sources and file types  Discover advanced software engineering concepts that will will save you time and promote code reuse   Who this book is for  This book is for developers who already have a working knowledge of JavaScript and are interested in adopting Node.js into their projects. All other concepts will be introduced from first-principals.  Table of Contents Introducing Node.js  The Node Module System  The Event Loop  Events  Timers and Scheduling  The Command Line Interface  Accessing the File System  Data Streams  Binary Data  Creating Child Processes  Network Programming  HTTP Server Development  Connect  Connecting to Databases  Logging  Application Scaling  Appendix},
    language = {en},
    publisher = {Apress},
    author = {Ihrig, Colin J.},
    month = nov,
    year = {2013},
    keywords = {Computers / Programming / Microsoft, Computers / Programming Languages / HTML, Computers / Programming Languages / JavaScript},
    pages = {9--13}
}

@misc{npm.js_pm2_2018,
    title = {pm2},
    url = {https://www.npmjs.com/package/pm2},
    abstract = {Production process manager for Node.JS applications with a built-in load balancer.},
    urldate = {2018-05-06},
    journal = {npm},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/Q6YP3SMY/pm2.html:text/html}
}

@misc{process_file_node_js_2018,
    title = {Process {File} · {PM}2},
    url = {https://pm2.keymetrics.io/},
    abstract = {Advanced process manager for production Node.js applications. Load balancer, logs facility, startup script, micro service management, at a glance.},
    language = {en},
    urldate = {2018-05-06},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/DK9AXKW5/application-declaration.html:text/html}
}

@misc{deployment_node_js_app_2018,
    title = {Deployment · {PM}2},
    url = {https://pm2.keymetrics.io/},
    abstract = {Advanced process manager for production Node.js applications. Load balancer, logs facility, startup script, micro service management, at a glance.},
    language = {en},
    urldate = {2018-05-06},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/9S8UDHHP/deployment.html:text/html}
}

@misc{node-chakracore_2017,
    title = {Node-{ChakraCore} update from {Node}.js {Interactive} 2017},
    url = {https://blogs.windows.com/msedgedev/2017/10/04/node-chakracore-update-node-js-interactive-2017/},
    abstract = {Today at Node.js Interactive, we'd like to share some updates on Node-ChakraCore running production workloads, advancing N-API, and running Node on iOS.},
    language = {en-US},
    urldate = {2018-05-06},
    journal = {Microsoft Edge Dev Blog},
    month = oct,
    year = {2017}
}

@misc{jespernordstrom_architecting_2016,
    title = {Architecting for speed: {How} agile innovators accelerate growth through microservices},
    shorttitle = {Architecting for speed},
    url = {http://jespernordstrom.net/articles/architecting-speed-agile-innovators-accelerate-growth-microservices/},
    abstract = {In a world where software has become the key differentiator, enterprises are forced to transform the way they build, ship and run software in order to stay in the game. Competitive pressure requires applications to be rapidly and continuously upgraded with nonstop availability, and companies that lack the capacity to experiment, innovate and get new features out quickly, will be at disadvantage. Continue Reading →},
    language = {en-US},
    urldate = {2018-05-06},
    journal = {Jesper Nordström},
    author = {{jespernordstrom}},
    month = nov,
    year = {2016}
}

@misc{fischer_mastering_2018,
    title = {Mastering the {Art} of {NPM}},
    url = {https://hackernoon.com/mastering-the-art-of-npm-ca06357150cb},
    abstract = {Tips for becoming more productive as a JavaScript developer by making efficient use of the NPM library.},
    urldate = {2018-05-15},
    journal = {Hacker Noon},
    author = {Fischer, Travis},
    month = mar,
    year = {2018},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/GB3A55JP/mastering-the-art-of-npm-ca06357150cb.html:text/html}
}

@book{winkler_skalierbare_1997,
    title = {Eine skalierbare {Server}- und {Netzarchitektur} für den verbindungslosen {Dienst} im {B}-{ISDN}},
    isbn = {978-3-89675-228-4},
    language = {de},
    publisher = {Herbert Utz Verlag},
    author = {Winkler, Christian},
    year = {1997},
    pages = {36}
}

@misc{ananthakrishnan_understanding_2018,
    title = {Understanding the basics of {Node}.js},
    url = {https://medium.com/prod-io/understanding-the-basics-of-node-js-99e01c5d844f},
    abstract = {What is Node.js?},
    urldate = {2018-05-16},
    journal = {Prod.IO},
    author = {Ananthakrishnan, Sindhu},
    month = jan,
    year = {2018},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/B6Q88KT4/understanding-the-basics-of-node-js-99e01c5d844f.html:text/html}
}

@book{lopez_network_2013,
    title = {Network and {System} {Security}: 7th {International} {Conference}, {NSS} 2013, {Madrid}, {Spain}, {June} 3-4, 2013, {Proceedings}},
    isbn = {978-3-642-38631-2},
    shorttitle = {Network and {System} {Security}},
    abstract = {This book constitutes the proceedings of the 7th International Conference on Network and System Security, NSS 2013, held in Madrid, Spain, in June 2013. The 41 full papers presented were carefully reviewed and selected from 176 submissions. The volume also includes 7 short papers and 13 industrial track papers. The paper are organized in topical sections on network security (including: modeling and evaluation; security protocols and practice; network attacks and defense) and system security (including: malware and intrusions; applications security; security algorithms and systems; cryptographic algorithms; privacy; key agreement and distribution).},
    language = {en},
    publisher = {Springer},
    author = {Lopez, Javier and Huang, Xinyi and Sandhu, Ravi},
    month = may,
    year = {2013},
    keywords = {Business \& Economics / Information Management, Computers / Desktop Applications / General, Computers / Electronic Commerce, Computers / Information Technology, Computers / Networking / Hardware, Computers / Security / Cryptography, Computers / Security / General, Computers / Systems Architecture / General},
    pages = {150--160}
}

@book{koch_javascript_2012,
    title = {{JavaScript} ({iX} {Edition}): {Einführung}, {Programmierung} und {Referenz}},
    isbn = {978-3-86491-055-5},
    shorttitle = {{JavaScript} ({iX} {Edition})},
    abstract = {Verständlich und praxisnah beschreibt Erfolgsautor Stefan Koch den JavaScript-Standard ECMAScript. Er erklärt u.a. browser- und plattformunabhängige Programmierung, Stylesheets und das Document Object Model, Anwenderfeedback durch Formulareingaben und Cookies. Ein Referenzteil über die wichtigsten Objekte, die in den verschiedenen Browsern zur Verfügung stehen, ist auch für den erfahrenen JavaScript-Programmierer von großem Wert. Die 6. Auflage wurde komplett durchgesehen, aktualisiert und um neue Themen wie HTML 5 erweitert.},
    language = {de},
    publisher = {dpunkt.verlag},
    author = {Koch, Stefan},
    month = mar,
    year = {2012},
    keywords = {Computers / Programming Languages / JavaScript},
    pages = {148}
}

@book{chodorow_mongodb:_2013,
    title = {{MongoDB}: {The} {Definitive} {Guide}: {Powerful} and {Scalable} {Data} {Storage}},
    isbn = {978-1-4493-4482-5},
    shorttitle = {{MongoDB}},
    abstract = {Manage the huMONGOus amount of data collected through your web application with MongoDB. This authoritative introduction—written by a core contributor to the project—shows you the many advantages of using document-oriented databases, and demonstrates how this reliable, high-performance system allows for almost infinite horizontal scalability.This updated second edition provides guidance for database developers, advanced configuration for system administrators, and an overview of the concepts and use cases for other people on your project. Ideal for NoSQL newcomers and experienced MongoDB users alike, this guide provides numerous real-world schema design examples.Get started with MongoDB core concepts and vocabularyPerform basic write operations at different levels of safety and speedCreate complex queries, with options for limiting, skipping, and sorting resultsDesign an application that works well with MongoDBAggregate data, including counting, finding distinct values, grouping documents, and using MapReduceGather and interpret statistics about your collections and databasesSet up replica sets and automatic failover in MongoDBUse sharding to scale horizontally, and learn how it impacts applicationsDelve into monitoring, security and authentication, backup/restore, and other administrative tasks},
    language = {en},
    publisher = {"O'Reilly Media, Inc."},
    author = {Chodorow, Kristina},
    month = may,
    year = {2013},
    note = {Google-Books-ID: uGUKiNkKRJ0C},
    keywords = {Computers / Data Modeling \& Design, Computers / Databases / General},
    pages = {3--5}
}

@book{stewart_comptia_2014,
    address = {Indianapolis, IN},
    edition = {3},
    title = {{CompTIA} {Security}+ {Review} {Guide}: {Exam} {SY}0-401},
    isbn = {978-1-118-90137-3},
    shorttitle = {{CompTIA} {Security}+ {Review} {Guide}},
    abstract = {Focused review for the CompTIA Security+ certification exam The CompTIA Security+ certification offers tremendous opportunities for IT professionals. For those who want to take their careers to the next level, CompTIA Security+ Review Guide: Exam SY0-401 is here to serve as a great resource for certification preparation. This concise, focused guide is easy to use and is organized by each exam objective for quick review and reinforcement of key topics. You'll find information on network security, compliance and operational security, and threats and vulnerabilities. Additionally, this indispensable resource delves into application, data, and host security, access control and identity management, and cryptography. Whether you're looking to achieve Security+ certification or simply get up to speed on key IT security concepts, this review guide brings together lessons on the most essential topics. In addition to the content in the book, you'll have access to more than 100 practice exam questions, electronic flashcards, and a searchable glossary of key terms.* Serves as an essential review guide for Security+ certification exam* Split into six sections that cover the most essential topics for professionals interested in Security+ certification and other certifications* Features additional resources featured on companion website, including practice exam questions, electronic flashcards, and a glossary of key terms More than 250,000 IT professionals have earned their Security+ certification since it was founded. Join the thousands who are excelling in their IT careers and get a head start on reviewing for one of the field's most sought after certifications.},
    language = {Englisch},
    publisher = {Sybex},
    author = {Stewart, James M.},
    month = jul,
    year = {2014},
    pages = {234}
}

@misc{ogrady_redmonk_2018,
    title = {The {RedMonk} {Programming} {Language} {Rankings}: {January} 2018},
    shorttitle = {The {RedMonk} {Programming} {Language} {Rankings}},
    url = {http://redmonk.com/sogrady/2018/03/07/language-rankings-1-18/},
    abstract = {Tweet},
    language = {en-US},
    urldate = {2018-05-17},
    journal = {tecosystems},
    author = {O'Grady, Stephen},
    month = mar,
    year = {2018},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/42YTUT57/language-rankings-1-18.html:text/html}
}

@misc{foundation_ecmascript_nodate,
    title = {{ECMAScript} 2015 ({ES}6) and beyond},
    url = {https://nodejs.org/en/docs/es6/},
    language = {en},
    urldate = {2018-05-17},
    journal = {Node.js},
    author = {Foundation, Node js},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/AAHQXY3D/es6.html:text/html}
}

@misc{npm_mongodb_2018,
    title = {mongodb},
    url = {https://www.npmjs.com/package/mongodb},
    abstract = {The official MongoDB driver for Node.js},
    urldate = {2018-05-17},
    journal = {npm},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/7TN6A5FT/mongodb.html:text/html}
}

@misc{npm_loopback-connector-mongodb_2018,
    title = {loopback-connector-mongodb},
    url = {https://www.npmjs.com/package/loopback-connector-mongodb},
    abstract = {The official MongoDB connector for the LoopBack framework.},
    urldate = {2018-05-17},
    journal = {npm},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/JMH3RTYW/loopback-connector-mongodb.html:text/html}
}

@misc{github_mongodb-core:_2018,
    title = {mongodb-core: {MongoDB} core driver functionality aims to make the "smallest" viable driver api},
    shorttitle = {mongodb-core},
    url = {https://github.com/mongodb-js/mongodb-core},
    urldate = {2018-05-17},
    publisher = {mongodb-js},
    month = may,
    year = {2018},
    note = {original-date: 2014-03-21T12:38:24Z}
}

@book{yener_professional_2014,
    title = {Professional {Java} {EE} {Design} {Patterns}},
    isbn = {978-1-118-84345-1},
    abstract = {Master Java EE design pattern implementation to improve your design skills and your application’s architecture Professional Java EE Design Patterns is the perfect companion for anyone who wants to work more effectively with Java EE, and the only resource that covers both the theory and application of design patterns in solving real-world problems. The authors guide readers through both the fundamental and advanced features of Java EE 7, presenting patterns throughout, and demonstrating how they are used in day-to-day problem solving. As the most popular programming language in community-driven enterprise software, Java EE provides an API and runtime environment that is a superset of Java SE. Written for the junior and experienced Java EE developer seeking to improve design quality and effectiveness, the book covers areas including:  Implementation and problem-solving with design patterns Connection between existing Java SE design patterns and new Java EE concepts Harnessing the power of Java EE in design patterns Individually-based focus that fully explores each pattern Colorful war-stories showing how patterns were used in the field to solve real-life problems  Unlike most Java EE books that simply offer descriptions or recipes, this book drives home the implementation of the pattern to real problems to ensure that the reader learns how the patterns should be used and to be aware of their pitfalls. For the programmer looking for a comprehensive guide that is actually useful in the everyday workflow, Professional Java EE Design Patterns is the definitive resource on the market.},
    language = {en},
    publisher = {John Wiley \& Sons},
    author = {Yener, Murat and Theedom, Alex},
    month = dec,
    year = {2014},
    keywords = {Computers / Programming / General, Computers / Programming / Object Oriented},
    pages = {116--120}
}

@book{breshears_art_2009,
    title = {The {Art} of {Concurrency}: {A} {Thread} {Monkey}'s {Guide} to {Writing} {Parallel} {Applications}},
    isbn = {978-0-596-55578-8},
    shorttitle = {The {Art} of {Concurrency}},
    abstract = {If you're looking to take full advantage of multi-core processors with concurrent programming, this practical book provides the knowledge and hands-on experience you need. The Art of Concurrency is one of the few resources to focus on implementing algorithms in the shared-memory model of multi-core processors, rather than just theoretical models or distributed-memory architectures. The book provides detailed explanations and usable samples to help you transform algorithms from serial to parallel code, along with advice and analysis for avoiding mistakes that programmers typically make when first attempting these computations.Written by an Intel engineer with over two decades of parallel and concurrent programming experience, this book will help you:Understand parallelism and concurrencyExplore differences between programming for shared-memory and distributed-memoryLearn guidelines for designing multithreaded applications, including testing and tuningDiscover how to make best use of different threading libraries, including Windows threads, POSIX threads, OpenMP, and Intel Threading Building BlocksExplore how to implement concurrent algorithms that involve sorting, searching, graphs, and other practical computationsThe Art of Concurrency shows you how to keep algorithms scalable to take advantage of new processors with even more cores. For developing parallel code algorithms for concurrent programming, this book is a must.},
    language = {en},
    publisher = {"O'Reilly Media, Inc."},
    author = {Breshears, Clay},
    month = may,
    year = {2009},
    note = {Google-Books-ID: rU68SYVS7S8C},
    keywords = {Computers / Programming / General, Computers / Programming / Parallel, Computers / Programming Languages / C, Computers / Software Development \& Engineering / General},
    pages = {71}
}

@misc{performanceMonitoring_node.js_2017,
    title = {Node.js {Performance} {Monitoring} - {Part} 3: {Debugging} the {Event} {Loop}},
    shorttitle = {Node.js {Performance} {Monitoring} - {Part} 3},
    url = {http://nodesource.com/blog/node-js-performance-monitoring-part-3-debugging-the-event-loop/},
    abstract = {Take a deep dive into the Node.js event loop and learn how to diagnose and debug issues that stem from unoptimized JavaScript.},
    language = {en},
    urldate = {2018-06-08},
    journal = {The NodeSource Blog - Node.js Tutorials, Guides, and Updates},
    month = sep,
    year = {2017},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/MQPT7CP6/node-js-performance-monitoring-part-3-debugging-the-event-loop.html:text/html}
}

@misc{foundation_dont_2017,
    title = {Don't {Block} the {Event} {Loop} (or the {Worker} {Pool})},
    url = {https://nodejs.org/en/docs/guides/dont-block-the-event-loop/},
    language = {en},
    urldate = {2018-06-08},
    journal = {Node.js},
    author = {Foundation, Node js},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/HPF9TVGD/dont-block-the-event-loop.html:text/html}
}

@misc{nosqldb_list_2018,
    title = {{NoSQL}},
    copyright = {Creative Commons Attribution-ShareAlike License},
    url = {https://en.wikipedia.org/w/index.php?title=NoSQL&oldid=843169983},
    abstract = {A NoSQL (originally referring to "non SQL" or "non relational") database provides a mechanism for storage and retrieval of data that is modeled in means other than the tabular relations used in relational databases. Such databases have existed since the late 1960s, but did not obtain the "NoSQL" moniker until a surge of popularity in the early twenty-first century, triggered by the needs of Web 2.0 companies such as Facebook, Google, and Amazon. NoSQL databases are increasingly used in big data and real-time web applications. NoSQL systems are also sometimes called "Not only SQL" to emphasize that they may support SQL-like query languages.
Motivations for this approach include: simplicity of design, simpler "horizontal" scaling to clusters of machines (which is a problem for relational databases), and finer control over availability. The data structures used by NoSQL databases (e.g. key-value, wide column, graph, or document) are different from those used by default in relational databases, making some operations faster in NoSQL. The particular suitability of a given NoSQL database depends on the problem it must solve. Sometimes the data structures used by NoSQL databases are also viewed as "more flexible" than relational database tables.
Many NoSQL stores compromise consistency (in the sense of the CAP theorem) in favor of availability, partition tolerance, and speed. Barriers to the greater adoption of NoSQL stores include the use of low-level query languages (instead of SQL, for instance the lack of ability to perform ad-hoc joins across tables), lack of standardized interfaces, and huge previous investments in existing relational databases. Most NoSQL stores lack true ACID transactions, although a few databases, such as MarkLogic, Aerospike, FairCom c-treeACE, Google Spanner (though technically a NewSQL database), Symas LMDB, and OrientDB have made them central to their designs. (See ACID and join support.)
Instead, most NoSQL databases offer a concept of "eventual consistency" in which database changes are propagated to all nodes "eventually" (typically within milliseconds) so queries for data might not return updated data immediately or might result in reading data that is not accurate, a problem known as stale reads. Additionally, some NoSQL systems may exhibit lost writes and other forms of data loss. Some NoSQL systems provide concepts such as write-ahead logging to avoid data loss. For distributed transaction processing across multiple databases, data consistency is an even bigger challenge that is difficult for both NoSQL and relational databases. Even current relational databases "do not allow referential integrity constraints to span databases." There are few systems that maintain both ACID transactions and X/Open XA standards for distributed transaction processing.},
    language = {en},
    urldate = {2018-06-08},
    journal = {Wikipedia},
    month = may,
    year = {2018},
    note = {Page Version ID: 843169983},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/RAK69I6S/index.html:text/html}
}

@misc{typescripts_pros_and_cons_2014,
    title = {What is {TypeScript}? {Pros} and {Cons}},
    shorttitle = {What is {TypeScript}?},
    url = {https://designmodo.com/typescript/},
    abstract = {TypeScript is described as a strict superset of JavaScript, which adds optional static typing and class-based object-oriented programming aligned with ECMAScript 6 standard proposal.},
    language = {en-US},
    urldate = {2018-06-08},
    journal = {Designmodo},
    month = dec,
    year = {2014}
}

@misc{nodejs_c++_2018,
    title = {C++ {Addons} {\textbar} {Node}.js v10.4.0 {Documentation}},
    url = {https://nodejs.org/api/addons.html},
    urldate = {2018-06-09},
    file = {C++ Addons | Node.js v10.4.0 Documentation:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/E2P9CQXN/addons.html:text/html}
}

@book{alonso_web_2003,
    title = {Web {Services}: {Concepts}, {Architectures} and {Applications}},
    isbn = {978-3-540-44008-6},
    shorttitle = {Web {Services}},
    abstract = {Like many other incipient technologies, Web services are still surrounded by a tremendous level of noise. This noise results from the always dangerous combination of wishful thinking on the part of research and industry and of a lack of clear understanding of how Web services came to be. On the one hand, multiple contradictory interpretations are created by the many attempts to realign existing technology and strategies with Web services. On the other hand, the emphasis on what could be done with Web services in the future often makes us lose track of what can be really done with Web services today and in the short term. These factors make it extremely difficult to get a coherent picture of what Web services are, what they contribute, and where they will be applied. Alonso and his co-authors deliberately take a step back. Based on their academic and industrial experience with middleware and enterprise application integration systems, they describe the fundamental concepts behind the notion of Web services and present them as the natural evolution of conventional middleware, necessary to meet the challenges of the Web and of B2B application integration.  Rather than providing a reference guide or a "how to write your first Web service" kind of book, they discuss the main objectives of Web services, the challenges that must be faced to achieve them, and the opportunities that this novel technology provides. Established, as well as recently proposed, standards and techniques (e.g., WSDL, UDDI, SOAP, WS-Coordination, WS-Transactions, and BPEL), are then examined in the context of this discussion in order to emphasize their scope, benefits, and shortcomings. Thus, the book is ideally suited both for professionals considering the development of application integration solutions and for research and students interesting in understanding and contributing to the evolution of enterprise application technologies.},
    language = {en},
    publisher = {Springer Science \& Business Media},
    author = {Alonso, Gustavo and Casati, Fabio and Kuno, Harumi and Machiraju, Vijay},
    month = sep,
    year = {2003},
    note = {Google-Books-ID: CclkovBDqJkC},
    keywords = {Business \& Economics / Industries / Computers \& Information Technology, Computers / Databases / General, Computers / Desktop Applications / General, Computers / Electronic Commerce, Computers / General, Computers / Information Technology, Computers / Information Theory, Computers / Programming / Algorithms, Computers / System Administration / Storage \& Retrieval, Science / General},
    pages = {30--32}
}

@misc{vedmant_how_2017,
    title = {How to setup {Node}.js production application on {Apache} multiple virtual host server},
    url = {https://vedmant.com/setup-node-js-production-application-apache-multiple-virtual-host-server/},
    abstract = {When it comes to using Node.js on backend it’s quite different from what people used to do for PHP server configuration. Process manager First and most important is not to run your application directly with node app.js command instead use one of the following packages: forever, PM2, and some others. This will help maintain your … Continue reading How to setup Node.js production application on Apache multiple virtual host server},
    language = {en-US},
    urldate = {2018-06-09},
    journal = {Vedmant's nest},
    author = {vedmant, Author},
    month = sep,
    year = {2017},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/ESRA679Q/setup-node-js-production-application-apache-multiple-virtual-host-server.html:text/html}
}

@book{deussen_notebook-universitat_2004,
    title = {Die {Notebook}-{Universität} {Karlsruhe} ({TH}) - {NUKATH}},
    isbn = {978-3-937300-01-6},
    language = {de},
    publisher = {KIT Scientific Publishing},
    author = {Deussen, Peter},
    year = {2004},
    pages = {145}
}

@misc{ide_auswahlkriterien_bsi_2018,
    title = {{BSI} - {M} 4 {Maßnahmenkatalog} {Hardware} und {Software} - {IT}-{Grundschutz}-{Kataloge} - {M} 4.493 {Auswahl} einer {Entwicklungsumgebung} für die {Software}-{Entwicklung}},
    url = {https://www.bsi.bund.de/DE/Themen/ITGrundschutz/ITGrundschutzKataloge/Inhalt/_content/m/m04/m04493.html},
    urldate = {2018-06-11},
    file = {BSI - M 4 Maßnahmenkatalog Hardware und Software - IT-Grundschutz-Kataloge - M 4.493 Auswahl einer Entwicklungsumgebung für die Software-Entwicklung:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/NBITIHFY/m04493.html:text/html}
}

@misc{visual_studio_code_test:_2018,
    title = {Test: {Microsoft} {Visual} {Studio} {Code}, ein {Editor} mit integriertem {Debugger}},
    shorttitle = {Test},
    url = {https://www.heise.de/newsticker/meldung/Test-Microsoft-Visual-Studio-Code-ein-Editor-mit-integriertem-Debugger-4026553.html},
    abstract = {Microsoft Visual Studio Code ist ein kostenloser, quelloffener Code-Editor zum Entwickeln und Debuggen moderner Cloud- und Webanwendungen. Er läuft unter Windows, Linux sowie macOS und bringt alles mit, was man zur Softwareentwicklung braucht.},
    language = {de},
    urldate = {2018-06-11},
    journal = {heise online},
    author = {online, heise},
    file = {Snapshot:/home/helmut/.mozilla/firefox/y2m8eis4.default/zotero/storage/WKZM7YNP/Test-Microsoft-Visual-Studio-Code-ein-Editor-mit-integriertem-Debugger-4026553.html:text/html}
}

@book{kircher_it:_2006,
    title = {{IT}: {Technologien}, {Lösungen}, {Innovationen}},
    isbn = {978-3-540-46164-7},
    shorttitle = {{IT}},
    abstract = {IT ist das Zauberwort unserer Zeit. Viele Fragen, die sich für Unternehmen in der globalisierten Welt stellen, finden ihre Lösungen im optimierten Einsatz von IT-Technologien. Ohne IT ist es nicht mehr möglich, die für die Überlebensfähigkeit eines Unternehmens und dessen Erfolg notwendigen Innovationen zu erreichen. Führende Experten aus einem der renommiertesten europäischen Entwicklungszentren gehen auf die wichtigsten technologischen Entwicklungen ein und erläutern deren Umsetzung für Unternehmen im Wettbewerb. Besondere Betonung liegt dabei auf dem Aspekt der IT als Innovationsmotor. Das Buch gibt gleichzeitig einen fundierten Überblick über die wichtigsten IT-Technologien, die heute und in naher Zukunft in zum Einsatz kommen.},
    language = {de},
    publisher = {Springer Science \& Business Media},
    author = {Kircher, Herbert},
    month = nov,
    year = {2006},
    note = {Google-Books-ID: 1DSyRjeHrXYC},
    keywords = {Business \& Economics / General, Business \& Economics / Management, Business \& Economics / Production \& Operations Management, Business \& Economics / Purchasing \& Buying, Computers / Information Technology, Computers / System Administration / Storage \& Retrieval},
    pages = {8--15}
}

@book{osterrieder_komponentenmodelle_2004,
    title = {Komponentenmodelle für {Web}-{Anwendungen}},
    isbn = {978-3-8324-8119-3},
    abstract = {Inhaltsangabe:Zusammenfassung: Die Diplomarbeit vergleicht die de-facto-Standards der komponentenbasierten Softwareentwicklung und die Spezifikationen und Frameworks zur Entwicklung von Web-Anwendungen, die mit den untersuchten Komponentenmodellen in Verbindung stehen. Um die Ziele dieser Diplomarbeit zu erreichen, wurden im Kapitel 2 die Grundlagen der komponentenbasierten Softwareentwicklung vorgestellt. Anschließend wurde ein Überblick über die Komponentenmodelle und Spezifikationen der de-facto-Standards CORBA, der Enterprise JavaBeans, des .NET Frameworks und der Web-Services gegeben. Das Kapitel 2 schließt mit einem Vergleich der vorgestellten Komponentenmodelle, welcher durch eine tabellarische Übersicht verdeutlicht wurde. Kapitel 3 beschäftigt sich in erster Linie mit Grundlagen und Architekturen von Web-Anwendungen. Dabei wurden die wichtigsten Anforderungen an Web-Anwendungen beschrieben, welche als typische Eigenschaften von Web-Anwendungen gesehen werden können. Diese Anforderungen wurden in einem Kriterienkatalog zusammengefasst. Er gilt als Verlgleichsgrundlage der beschriebenen Techniken. Ein Überblick über die Architekturen von Web-Anwendungen schafft einen Einblick in mehrschichtige Architekturen und deren Middleware. Ein oft verwendetes Entwurfsmuster für Architekturen von Web-Anwendungen ist das Model-View-Controller-Muster, welches abschließend in Kapitel 3 beschrieben wurde. In Kapitel 4 wurden die Spezifikationen und Frameworks der beschriebenen Komponentenmodelle, im Zusammenhang mit Web-Anwendungen, näher untersucht. Die Untersuchungen beziehen sich auf die Architekturen der jeweiligen Spezifikationen und Frameworks und deren Lösungsstrategien um den in Kapitel 3 gefundenen Anforderungen aus dem Kriterienkatalog gerecht zu werden. Praktisches Ziel der Diplomarbeit war die Entwicklung einer komponentenbasierten Web-Anwendung in Form eines Terminkalenders. Die dazu notwendigen Aktionen sind in Kapitel 5 zusammengefasst. Dazu wurde zuerst die zu entwickelnde Web-Anwendung spezifiziert, indem funktionale und nicht-funktionale Anforderungen an die Anwendung erhoben wurden. Anschließend erfolgte eine Auseinandersetzung mit den Vor- und Nachteilen der vorgestellten Techniken von CORBA, der J2EE Spezifikation, dem .NET Framework und er Web-Services um ein geeignetes Komponentenmodell für den Terminkalender zu finden. Die Entscheidung fiel auf die J2EE Spezifikation und Web-Services. Die restlichen Abschnitte beschreiben [...]},
    language = {de},
    publisher = {diplom.de},
    author = {Osterrieder, Christian},
    month = jul,
    year = {2004},
    note = {Google-Books-ID: dSpqAQAAQBAJ},
    keywords = {Computers / Internet / General},
    pages = {80--86}
}
