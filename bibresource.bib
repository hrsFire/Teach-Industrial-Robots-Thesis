@misc{noauthor_industrieroboter_2020,
	title = {Industrieroboter},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Industrieroboter&oldid=199907434},
	abstract = {Ein Industrieroboter (IR, auch: Industrieller Manipulator) ist eine universelle, programmierbare Maschine zur Handhabung, Montage oder Bearbeitung von Werkstücken. Diese Roboter sind für den Einsatz im industriellen Umfeld konzipiert (z. B. Automobilfertigung). Sie gehören in die Maschinenbau-Disziplin Automatisierungstechnik. Der Industrieroboter besteht im Allgemeinen aus dem Manipulator (Roboterarm), der Steuerung und einem Effektor (Werkzeug, Greifer etc.). Oft werden Roboter auch mit verschiedenen Sensoren ausgerüstet. Einmal programmiert ist die Maschine in der Lage, einen Arbeitsablauf autonom durchzuführen, oder die Ausführung der Aufgabe abhängig von Sensorinformationen in Grenzen zu variieren.},
	language = {de},
	urldate = {2020-06-01},
	journal = {Wikipedia},
	month = may,
	year = {2020},
	note = {Page Version ID: 199907434}
}

@book{hagele_aufbau_2006,
	address = {Berlin, Heidelberg},
	series = {{VDI}-{Buch}},
	title = {Aufbau von {Industrierobotern}},
	isbn = {978-3-540-34823-8},
	language = {de},
	publisher = {Springer},
	author = {Hägele, Martin and Schäfer, Timo},
	editor = {Gevatter, Hans-Jürgen and Grünhaupt, Ulrich},
	year = {2006},
	doi = {10.1007/3-540-34823-9_27},
	pages = {743--744}
}

@book{pott_industrielle_2019,
	title = {Industrielle {Robotersysteme}: {Entscheiderwissen} für die {Planung} und {Umsetzung} wirtschaftlicher {Roboterlösungen}},
	isbn = {978-3-658-25344-8},
	shorttitle = {Industrielle {Robotersysteme}},
	abstract = {Dieses Buch bietet eine Einführung in die Grundlagen des industriellen Robotereinsatzes und vermittelt Praxiswissen im Hinblick auf Planung, Umsetzung und Betrieb von Robotersystemen. Roboter haben sich als zuverlässige Werkzeuge in der Automatisierung bewährt. Sie sind in vielen Industriebereichen für die wirtschaftliche Produktion unentbehrlich. Die erweiterten Einsatzmöglichkeiten verursachen allerdings auch einen erheblichen Integrationsbedarf auf dem Weg vom »nackten« Roboter zu einer maßgeschneiderten Roboterlösung. Zur Auswahl der passenden Roboterlösung und zur effektiven Kommunikation mit Lieferanten und Kunden sind technisches Basiswissen, die Grundbegriffe der Robotik und ein umfassender Marktüberblick unverzichtbar. Die Autoren vermitteln praxisnah die notwendigen Grundlagen, um informierte Entscheidungen bei der Umsetzung von Robotersystemen zu treffen.},
	language = {de},
	publisher = {Springer Vieweg},
	author = {Pott, Andreas and Dietz, Thomas},
	year = {2019},
	doi = {10.1007/978-3-658-25345-5}
}

@misc{noauthor_genauigkeit_nodate,
	title = {Genauigkeit, {Wiederholgenauigkeit} und {Auflösung}},
	url = {https://www.pfeiffer-vacuum.com/de/know-how/mechanische-komponenten-im-vakuum/manipulatoren-und-mechanische-durchfuehrungen/genauigkeit-wiederholgenauigkeit-und-aufloesung/},
	urldate = {2020-06-02}
}

@misc{noauthor_prazision_nodate,
	title = {Präzision und {Wiederholgenauigkeit}},
	url = {https://www.vision-doctor.com/wiederholgenauigkeit.html},
	urldate = {2020-06-02}
}

@misc{noauthor_teach-technik_2020,
	title = {Teach-in ({Technik})},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Teach-in_(Technik)&oldid=197654136},
	abstract = {Teach-in (engl., etwa: „Einlernen“; auch: Teachen) bezeichnet ein Verfahren zur Programmierung eines Roboters. Dazu fährt der Programmierer als Tutor den Roboter mit einer Steuerkonsole in die gewünschte Position. Alle auf diesem Weg erreichten Koordinaten (Punkte) werden in der Steuerung gespeichert. Dieser Schritt wird so oft und lange wiederholt, bis ein gesamter Arbeitszyklus einmal durchlaufen ist.
Der Programmablauf besteht darin, dass der Roboter alle gespeicherten Punkte autonom anfährt. Für die Bewegung zwischen den einzelnen Punkten können Parameter eingegeben werden. So sind die Geschwindigkeit und die Beschleunigung einstellbar, bei einigen Robotern ist auch eine Angabe der notwendigen Genauigkeit möglich.},
	language = {de},
	urldate = {2020-06-04},
	journal = {Wikipedia},
	month = mar,
	year = {2020},
	note = {Page Version ID: 197654136}
}

@article{biggs_survey_nodate,
	title = {A {Survey} of {Robot} {Programming} {Systems}},
	abstract = {Robots have become signiﬁcantly more powerful and intelligent over the last decade, and are moving in to more service oriented roles. As a result robots will more often be used by people with minimal technical skills and so there is a need for easier to use and more ﬂexible programming systems. This paper reviews the current state of the art in robot programming systems. A distinction is made between manual and automatic programming systems. Manual systems require the user/programmer to create the robot program directly, by hand, while automatic systems generate a robot program as a result of interaction between the robot and the human; there are a variety of methods including learning, programming by demonstration and instructive systems.},
	language = {en},
	author = {Biggs, Geoﬀrey and MacDonald, Bruce},
	pages = {5}
}

@book{prassler_advances_2004,
	title = {Advances in {Human}-{Robot} {Interaction}},
	isbn = {978-3-540-23211-7},
	abstract = {"Advances in Human-Robot Interaction" provides a unique collection of recent research in human-robot interaction. It covers the basic important research areas ranging from multi-modal interfaces, interpretation, interaction, learning, or motion coordination to topics such as physical interaction, systems, and architectures. The book addresses key issues of human-robot interaction concerned with perception, modelling, control, planning and cognition, covering a wide spectrum of applications. This includes interaction and communication with robots in manufacturing environments and the collaboration and co-existence with assistive robots in domestic environments. Among the presented examples are a robotic bartender, a new programming paradigm for a cleaning robot, or an approach to interactive teaching of a robot assistant in manufacturing environment. This carefully edited book reports on contributions from leading German academic institutions and industrial companies brought together within MORPHA, a 4 year project on interaction and communication between humans and anthropomorphic robot assistants.},
	language = {en},
	publisher = {Springer Science \& Business Media},
	author = {Prassler, Erwin and Lawitzky, Gisbert and Stopp, Andreas and Grunwald, Gerhard and Hägele, Martin and Dillmann, Rüdiger and Iossifidis, Ioannis},
	month = oct,
	year = {2004},
	keywords = {Computers / Intelligence (AI) \& Semantics, Language Arts \& Disciplines / Library \& Information Science / General, Science / System Theory, Technology \& Engineering / Automation, Technology \& Engineering / General, Technology \& Engineering / Industrial Engineering, Technology \& Engineering / Machinery, Technology \& Engineering / Manufacturing, Technology \& Engineering / Power Resources / General}
}

@book{nof_handbook_1999,
	title = {Handbook of {Industrial} {Robotics}},
	isbn = {978-0-471-17783-8},
	abstract = {About the Handbook of Industrial Robotics, Second Edition:  "Once again, the Handbook of Industrial Robotics, in its Second Edition, explains the good ideas and knowledge that are needed for solutions." -Christopher B. Galvin, Chief Executive Officer, Motorola, Inc.  "The material covered in this Handbook reflects the new generation of robotics developments. It is a powerful educational resource for students, engineers, and managers, written by a leading team of robotics experts." - Yukio Hasegawa, Professor Emeritus, Waseda University, Japan.  "The Second Edition of the Handbook of Industrial Robotics organizes and systematizes the current expertise of industrial robotics and its forthcoming capabilities. These efforts are critical to solve the underlying problems of industry. This continuation is a source of power. I believe this Handbook will stimulate those who are concerned with industrial robots, and motivate them to be great contributors to the progress of industrial robotics." -Hiroshi Okuda, President, Toyota Motor Corporation.  "This Handbook describes very well the available and emerging robotics capabilities. It is a most comprehensive guide, including valuable information for both the providers and consumers of creative robotics applications." -Donald A. Vincent, Executive Vice President, Robotic Industries Association  120 leading experts from twelve countries have participated in creating this Second Edition of the Handbook of Industrial Robotics. Of its 66 chapters, 33 are new, covering important new topics in the theory, design, control, and applications of robotics. Other key features include a larger glossary of robotics terminology with over 800 terms and a CD-ROM that vividly conveys the colorful motions and intelligence of robotics. With contributions from the most prominent names in robotics worldwide, the Handbook remains the essential resource on all aspects of this complex subject.},
	language = {en},
	publisher = {John Wiley \& Sons},
	author = {Nof, Shimon Y.},
	month = mar,
	year = {1999},
	keywords = {Technology \& Engineering / General, Technology \& Engineering / Industrial Engineering},
	pages = {341--344}
}

@misc{noauthor_programengif_nodate,
	title = {{programEN}.gif ({GIF}-{Grafik}, 500 × 243 {Pixel})},
	url = {http://www.machinery-export.com/de/roboter/abb/img/programEN.gif},
	urldate = {2020-06-04}
}

@misc{noauthor_dead_man_switch_2020,
	title = {Dead man's switch},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Dead_man%27s_switch&oldid=960453369},
	abstract = {A dead man's switch (for other names, see alternative names) is a switch that is designed to be activated or deactivated if the human operator becomes incapacitated, such as through death, loss of consciousness, or being bodily removed from control. Originally applied to switches on a vehicle or machine, it has since come to be used to describe other intangible uses like in computer software.
These switches are usually used as a form of fail-safe where they stop a machine with no operator from a potentially dangerous action or incapacitate a device as a result of accident, malfunction, or misuse. They are common in such applications in locomotives, aircraft refuelling, freight elevators, lawn mowers, tractors, personal watercraft, outboard motors, chainsaws, snowblowers, tread machines, snowmobiles, amusement rides, and many medical imaging devices. On some machines, these switches merely bring the machines back to a safe state, such as reducing the throttle to idle or applying brakes while leaving the machines still running and ready to resume normal operation once control is reestablished.
Dead man's switches are not always used to stop machines and prevent harm. These switches can also be used as a fail-deadly. A spring-operated switch can also be used to complete a circuit when it is no longer held down. This means that a dead man's switch may be used to activate a harmful device, such as a bomb or IED. The user holds down a switch of some sort in their hand which arms the device. The device will activate when the switch is released, so that if the user is knocked out or killed while holding the switch, the bomb will detonate. The Special Weapons Emergency Separation System is an application of this concept in the field of nuclear weapons. A more extreme version is Russia's Dead Hand program, which allows for automatic launch of nuclear missiles should a number of conditions be met, even if all Russian leadership were to be killed.
A similar concept is the handwritten letters of last resort from the Prime Minister of the United Kingdom to the commanding officers of the four British ballistic missile submarines. They contain orders on what action to take if the British government were destroyed in a nuclear attack. After a prime minister leaves office the letters are destroyed unopened.
This concept has been employed with computer data, where sensitive information has been previously encrypted and released to the public, and the "switch" is the release of the decryption key, as with WikiLeaks' "insurance files".},
	language = {en},
	urldate = {2020-06-04},
	journal = {Wikipedia},
	month = jun,
	year = {2020},
	note = {Page Version ID: 960453369}
}

@book{dinwiddie_basic_2015,
	title = {Basic {Robotics}},
	isbn = {978-1-305-53705-7},
	abstract = {With no previous experience required, BASIC ROBOTICS walks readers step by step through the fundamentals of the industrial robot system. It begins with an exploration of the fascinating technological history that led to the modern robot, starting with events from Before the Common Era and ending with a glimpse of what the robots of tomorrow might become. From there the book explores safety, various parts of the robot, tooling, power transmission systems, the basics off programming, troubleshooting, maintenance, and much more. Engaging photos highlight various robotic systems and their parts, while stories of real-world events bring text concepts to life. This innovative First Edition incorporates many of the initiatives of STEM and is the culmination of lessons learned from the author's years of teaching robotics in various formats--from the traditional classroom to the industrial production floor with systems ranging from the LEGO Mindstorms NXT to the FANUC robot.Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.},
	language = {en},
	publisher = {Cengage Learning},
	author = {Dinwiddie, Keith},
	month = jan,
	year = {2015},
	keywords = {Technology \& Engineering / Mechanical},
	pages = {77}
}

@misc{noauthor_jogging_2017,
	title = {Jogging the {Robot}},
	url = {https://motioncontrolsrobotics.com/jogging-the-robot/},
	abstract = {Jogging the robot - In this Tech Talk How to Robot Series article we are going to go through the steps to take when you are jogging the robot.},
	language = {en-US},
	urldate = {2020-06-04},
	journal = {Motion Controls Robotics - Certified FANUC System Integrator},
	month = nov,
	year = {2017},
	note = {Library Catalog: motioncontrolsrobotics.com}
}

@misc{noauthor_echtzeitsystem_2020,
	title = {Echtzeitsystem},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Echtzeitsystem&oldid=200650574},
	abstract = {Als Echtzeitsysteme (englisch real-time systems) werden „Systeme zur unmittelbaren Steuerung und Abwicklung von Prozessen“ bezeichnet, die dafür an sie gestellte quantitative Echtzeitanforderungen erfüllen müssen. Diese kommen in diversen Technikgebieten zur Anwendung, etwa in der Prozessleittechnik, in Motorsteuerungen, in der Satellitensystemtechnik, in Signal- und Weichenstellanlagen, in der Robotik und in weiteren Bereichen.
Oft besteht die Anforderung darin, dass ein Ergebnis innerhalb eines vorher fest definierten Zeitintervalls garantiert berechnet ist, also vor einer bestimmten Zeitschranke vorliegt. Die Größe des Zeitintervalls spielt dabei keine Rolle: Während bei einigen Aufgaben (z. B. in der Motorsteuerung) eine Sekunde bereits zu lang sein kann, reichen für andere Probleme Stunden oder sogar Tage. Ein Echtzeitsystem muss also nicht nur ein Mess- oder Berechnungsergebnis mit dem richtigen Wert, sondern dasselbe auch noch rechtzeitig liefern. Andernfalls hat das System versagt.
In der Praxis lässt sich eine beliebig kleine Zeitschranke mangels genügend schneller Hardware nicht immer realisieren. Daher spricht man auch von „in Echtzeit“, wenn Programme ohne spürbare Verzögerung arbeiten. Diese Definition ist jedoch sehr unsauber. Grundsätzlich falsch ist es, „Echtzeitsystem“ als Synonym für „besonders schnell“ anzusehen. Im Gegenteil, Echtzeitsysteme müssen entsprechende Leerläufe einplanen, um auch in besonders fordernden Situationen ihren Echtzeitanforderungen gerecht zu werden.},
	language = {de},
	urldate = {2020-06-05},
	journal = {Wikipedia},
	month = jun,
	year = {2020},
	note = {Page Version ID: 200650574}
}

@book{worn_echtzeitsysteme_2006,
	title = {Echtzeitsysteme: {Grundlagen}, {Funktionsweisen}, {Anwendungen}},
	isbn = {978-3-540-27416-2},
	shorttitle = {Echtzeitsysteme},
	abstract = {Das vorliegende Werk vermittelt ein solides Fundament zum Verständnis der wesentlichen Prinzipien, Funktionsweisen und Architekturen von Echtzeitsystemen. Dabei werden zunächst die Grundlagen der Automation von technischen Prozessen mithilfe der Steuerungs- und Regelungstechnik behandelt. Anschließend werden elementare Hardware- und Software-Architekturen sowie Kommunikationsmechanismen für Echtzeitsysteme beschrieben und Methoden der Echtzeitprogrammierung, der Echtzeitbetriebssysteme sowie der Echtzeit-Middleware fundiert dargestellt. Abgeschlossen wird das Buch durch Anwendungsbeispiele von Echtzeitsystemen aus der Fabrikautomation, wie z. B. speicherprogrammierbare Steuerungen oder Roboter- und Werkzeugmaschinensteuerungen. Dieses Lehrbuch richtet sich an Studierende der Informatik, Elektrotechnik, Regelungstechnik und des Maschinenbaus im fortgeschrittenen Grundstudium und ist in gleicher Weise für in der Praxis stehende Entwickler in diesen Fachgebieten geeignet.},
	language = {de},
	publisher = {Springer-Verlag},
	author = {Wörn, Heinz},
	month = may,
	year = {2006},
	keywords = {Computers / Computer Science, Computers / Expert Systems, Computers / Information Technology, Computers / Networking / General, Computers / Networking / Hardware, Computers / Software Development \& Engineering / Systems Analysis \& Design, Technology \& Engineering / Electrical}
}

@misc{noauthor_garbage_collector_2020,
	title = {Garbage {Collection}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Garbage_Collection&oldid=200472744},
	abstract = {Die Garbage Collection, kurz GC (englisch für Müllabfuhr, auch automatische Speicherbereinigung oder Freispeichersammlung genannt) bezeichnet in der Software- und Informationstechnik eine automatische Speicherverwaltung, die zur Vermeidung von Speicherproblemen beiträgt; der Vorteil wird mit einem erhöhten Ressourcenverbrauch erkauft. Unter anderem wird der Speicherbedarf eines Computerprogramms minimiert. Dabei wird zur Laufzeit versucht, nicht länger benötigte Speicherbereiche automatisch zu identifizieren, um diese dann freizugeben. Manche automatische Speicherbereinigungen führen darüber hinaus die noch verwendeten Speicherbereiche zusammen (Defragmentierung).},
	language = {de},
	urldate = {2020-06-06},
	journal = {Wikipedia},
	month = may,
	year = {2020},
	note = {Page Version ID: 200472744}
}

@misc{noauthor_what_is_an_rtos_nodate,
	title = {What is an {RTOS} - {Real} {Time} {Operating} {System} {Information} and {Training}},
	url = {https://www.highintegritysystems.com/rtos/what-is-an-rtos/},
	abstract = {A Real Time Operating System, commonly known as an RTOS, is a software component that rapidly switches between tasks.},
	language = {en},
	urldate = {2020-06-06},
	journal = {High Integrity Systems},
	note = {Library Catalog: www.highintegritysystems.com}
}

@misc{noauthor_xnu_2019,
	title = {{XNU}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=XNU&oldid=195027335},
	abstract = {XNU ist ein Kernel, der in dem freien Basisbetriebssystem (core operating system) Darwin verwendet wird. Darwin bildet die Grundlage von Apples Betriebssystem-Varianten macOS, iOS, iPadOS, tvOS und watchOS. XNU wird als freie Software unter Version 2 der Apple Public Source License (APSL) veröffentlicht. Seinen Ursprung hat der Kernel u. a. im Betriebssystem NeXTStep.},
	language = {de},
	urldate = {2020-06-06},
	journal = {Wikipedia},
	month = dec,
	year = {2019},
	note = {Page Version ID: 195027335}
}

@misc{noauthor_sched_deadline_2020,
	title = {{SCHED}\_DEADLINE},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=SCHED_DEADLINE&oldid=951203928},
	abstract = {SCHED\_DEADLINE is a CPU scheduler available in the Linux kernel since version 3.14, based on the Earliest Deadline First (EDF) and Constant Bandwidth Server (CBS) algorithms, supporting resource reservations: each task scheduled under such policy is associated with a budget Q (aka runtime), and a period P, corresponding to a declaration to the kernel that Q time units are required by that task every P time units, on any processor. This makes SCHED\_DEADLINE particularly suitable for real-time applications, like multimedia or industrial control, where P corresponds to the minimum time elapsing between subsequent activations of the task, and Q corresponds to the worst-case execution time needed by each activation of the task.},
	language = {en},
	urldate = {2020-06-06},
	journal = {Wikipedia},
	month = apr,
	year = {2020},
	note = {Page Version ID: 951203928}
}

@misc{leemhuis_linux_nodate,
	title = {Linux 5.3 freigegeben: {Prioritäten} deckeln und {Trouble} für {Nvidia}},
	shorttitle = {Linux 5.3 freigegeben},
	url = {https://www.heise.de/ct/artikel/Linux-5-3-freigegeben-Prioritaeten-deckeln-und-Trouble-fuer-Nvidia-4470638.html},
	abstract = {Der neue Kernel schaufelt 16 Millionen weitere IPv4-Adressen frei, indem er ein Relikt ad acta legt. Den ISDN-Support stutzen die Entwickler zusammen. Zum Ausgleich bekommt Linux eine Funktion für Zeitreisen.},
	language = {de},
	urldate = {2020-06-06},
	journal = {c't Magazin},
	author = {Leemhuis, Thorsten},
	note = {Library Catalog: www.heise.de}
}

@misc{noauthor_microsoft_windows_ce_2019,
	title = {Microsoft {Windows} {CE}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Microsoft_Windows_CE&oldid=194448187},
	abstract = {Windows CE ist eine Betriebssystemlinie von Microsoft und für eingebettete Systeme, Thin Clients und Handhelds vorgesehen. Das Betriebssystem basiert auf keiner anderen Windows-Version und ist keine „verkleinerte Version“.
Die grafische Benutzeroberfläche kann, je nach Zusammenstellung des Herstellers, einer von Windows NT gleichen oder an kleine Bildschirme sowie den Einsatzzweck angepasst sein. Eine Win32-API ist auf beiden Plattformen vorhanden, so dass es theoretisch möglich wäre, Quelltext für beide zugleich zu entwickeln. In der Realität funktioniert dies aber meist nicht so einfach: Obwohl Windows CE eine Win32-basierte Programmierschnittstelle (englisch application programming interface, API) enthält, gibt es tiefgreifende Unterschiede, die die Portierungen von x86-Windows-Software in der Realität meist sehr aufwändig macht.
Nk.exe ist der Kernel von Windows CE, der völlig unabhängig von Windows NT von Grund auf neu entwickelt wurde. Windows CE basiert nicht auf einer der anderen Windows-Varianten (9x- oder NT-basiert) und ist keine „verkleinerte Version“ davon. Zwischenzeitlich unterstützte das Betriebssystem rund ein Dutzend Prozessorarchitekturen.
Im Unterschied zu DOS- oder NT-basierten Windows-Systemen wurde Windows CE in Hinblick auf Echtzeitfähigkeit entwickelt. Die Echtzeiteigenschaften hängen jedoch von einer Vielzahl von Faktoren ab, die dazu führen, dass die Echtzeitfähigkeit in der Praxis nicht zweifelsfrei vorhanden ist. Zu diesen Faktoren gehören die Eigenschaften der Zielarchitektur, Unterstützung durch Hardware und Treiber sowie vor allem die Schwierigkeit der Verifizierbarkeit von Echtzeitfähigkeit. Echtzeitfähigkeit ist nur für eine sehr stark begrenzte Zahl von Plattformen unter bestimmten Voraussetzungen teilweise anhand heuristischer Methoden überprüft worden, so dass es nicht möglich ist, von allgemeiner Echtzeitfähigkeit im Zusammenhang mit Windows CE zu sprechen.
Die Buchstaben „CE“ sind keine Abkürzung, sondern Andeutung einer Vielzahl von Konstruktionsgrundsätzen wie Kompaktheit, Kompatibilität (englisch compatibility) und Effizienz (englisch efficiency). Mit Version 6.0 erweiterte Microsoft den Namen zu Windows Embedded CE und mit Version 7 wurde das System zu Windows Embedded Compact umbenannt, damit es sich einheitlich in die Produktlinie Windows Embedded der Betriebssysteme von Microsoft für eingebettete Systeme einfügt.Eine weitere CE Umbenennung wurde ab 2002 als Microsoft Windows Mobile vermarktet. 2010 wurde eine CE-Variante mit spezieller Benutzer-Oberfläche Windows Phone 7 genannt.},
	language = {de},
	urldate = {2020-06-06},
	journal = {Wikipedia},
	month = nov,
	year = {2019},
	note = {Page Version ID: 194448187}
}

@book{chattopadhyay_embedded_2013,
	title = {{EMBEDDED} {SYSTEM} {DESIGN}},
	isbn = {978-81-203-4730-4},
	abstract = {Embedded system, as a subject, is an amalgamation of different domains, such as digital design, architecture, operating systems, interfaces, and algorithmic optimization techniques. This book acquaints the students with the alternatives and intricacies of embedded system design. It is designed as a textbook for the undergraduate students of Electronics and Communication Engineering, Electronics and Instrumentation Engineering, Computer Science and Engineering, Information Communication Technology (ICT), as well as for the postgraduate students of Computer Applications (MCA). While in the hardware platform the book explains the role of microcontrollers and introduces one of the most widely used embedded processor, ARM, it also deliberates on other alternatives, such as digital signal processors, field programmable devices, and integrated circuits. It provides a very good overview of the interfacing standards covering RS232C, RS422, RS485, USB, IrDA, Bluetooth, and CAN. In the software domain, the book introduces the features of real-time operating systems for use in embedded applications. Various scheduling algorithms have been discussed with their merits and demerits. The existing real-time operating systems have been surveyed. Guided by cost and performance requirements, embedded applications are often implemented partly in hardware and partly in software. The book covers the different optimization techniques proposed in the literature to take a judicious decision about this partitioning of application tasks. Power-aware design of embedded systems has also been dealt with. In its second edition, the text has been extensively revised and updated. Almost all the chapters have been modified and elaborated including detailed discussion on hardware platforms—ARM, DSP, and FPGA. The chapter on “interfacing standards” has been updated to incorporate the latest information. The new edition will be thereby immensely useful to the students, practitioners and advanced readers. Key Features • Presents a considerably wide coverage of the field of embedded systems • Discusses the ARM microcontroller in detail • Provides numerous exercises to assess the learning process • Offers a good discussion on hardware–software codesign},
	language = {en},
	publisher = {PHI Learning Pvt. Ltd.},
	author = {CHATTOPADHYAY, SANTANU},
	month = apr,
	year = {2013},
	keywords = {Computers / Microprocessors},
	pages = {106--107}
}

@article{hall_windows_ce_2005,
	title = {Windows {CE} 5.0 for real-time systems},
	language = {en},
	author = {Hall, Mike},
	year = {2005}
}

@article{marchesin_using_2004,
	title = {Using {Linux} for real-time applications},
	volume = {21},
	issn = {1937-4194},
	doi = {10.1109/MS.2004.1331295},
	abstract = {We've selected a topic for practitioners in the embedded and real-time domains, namely how to use Linux for real-time applications. The article is hands-on: it not only summarizes selection criteria and introduction schemes for RTLinux but also shows how Linux was actually integrated in an existing (legacy) architecture. For small and medium-sized businesses to stay competitive, they need communication systems that offer not only excellent telephone service but also Internet and data-handling capability. As a solution to this problem, we have built a comprehensive communication appliance called OmniPCX Office, or OXO - a preconfigured server integrating data, Internet, and voice communication capabilities. Rather than using proprietary software to support the OXO platform, we chose Linux with an RTLinux extension. This column explains why we chose it and how OXO uses it, focusing particularly on architecture and realtime aspects.},
	number = {5},
	journal = {IEEE Software},
	author = {Marchesin, A.},
	month = sep,
	year = {2004},
	note = {Conference Name: IEEE Software},
	keywords = {Access protocols, Computer architecture, data-handling capability, Delay, Guidelines, Internet, ISDN, Kernel, Linux, OmniPCX Office, Open source software, OXO platform, public domain software, Real time systems, real-time, real-time application, real-time systems, RTLinux, software architecture, voice communication},
	pages = {20}
}

@inproceedings{behnisch_iso_2008,
	title = {{ISO} 10218 – von der neuen {Norm} zur {Anwendung} / {ISO} 10218 – {Putting} the {New} {Standard} into {Practice}},
	abstract = {Kurzfassung
Seit 2006 ist der erste Teil der neuen Sicherheitsnorm ISO 10218-1 veröffentlicht. Der Teil 2 „Robotersystem und Integration“ wird im Jahr 2008 fertig gestellt werden und soll ein Handbuch für die Anwender und Integratoren von Robotersystemen darstellen. Neben der Darstellung aktueller und zukünftiger Robotertechnologien soll vor allem der Anwender einen tiefen Einblick erhalten, was ihn mit dem Teil 2 der Roboternorm erwartet. Zwar ist der ISO –Standard international akzeptiert, so wurde vor kurzem die ISO 10218-1 von der ANSI-RIA angenommen, doch welche Hürden auf dem globalen Markt genommen werden müssen, stellt gerade die Maschinenhersteller, die Roboter in ihren Anlagen vorsehen, vor erhebliche Probleme. Von der Planung bis zur Abnahme soll dieser Vortrag einen klaren Weg aufzeigen, den Integratoren zu begehen haben, um letztlich allen Sicherheitsanforderungen gerecht zu werden. Dazu wird auch über den Tellerrand geschaut und gerade die Anforderungen aus dem nordamerikanischen und asiatischen Raum aufgezeigt.

Von großem Interesse ist besonders, wie man nun diese neuen Sicherheitstechnologien effizient und richtig einsetzen kann. Neue Entwicklungen bei den Roboterherstellern als auch neue sicherheitsgerichtete Überwachungen, wie z.B. sichere Kameras, ergeben eine Vielzahl von Möglichkeiten, die sich jedoch auch in ihren Kosten sehr stark von einander unterscheiden können. Dabei sollen mögliche Einsparpotentiale aufgezeigt werden, ohne jedoch die notwendigen Sicherheitsanforderungen zu vernachlässigen.

Dieser Vortrag wird weitestgehend produktneutral gehalten. Es wird keine Herausstellung der Merkmale eines Roboterherstellers oder Sicherheitstechniklieferanten erfolgen. Der Fokus gilt dem Anwender und den Anforderungen, die für die Umsetzung der Applikation sicherheitsgerecht und konform zur Norm zu bewältigen sind.

Abstract
The first part of the new industrial robot safety standard ISO 10218-1; “Robots for Industrial Environments - Safety Requirements; Part 1: Robot,” was published in 2006. Part 2 of the standard, subtitled “Robot System and Integration,” will be completed in 2008 and is intended to be a handbook for users, application engineers and integrators of robot systems. In addition to describing current and future robot technologies, this contribution will provide an in-depth view of what part 2 of the standard will offer to the user. While the ISO standard is internationally accepted, noting for example that the ANSI-RIA has recently adopted it, the obstacles to be overcome in the global market constitute an appreciable challenge to machine suppliers that include robots in their systems. From the planning phase all the way to acceptance testing, this paper points out a clear path for integrators to follow so as to satisfy all safety requirements. In addition, we survey requirements typical for North American and Asian installations.

Of particular interest is how new safety technologies can be used properly and efficiently in actual installations. Current developments both from suppliers of industrial robots and from suppliers of safety monitoring equipment, such as safe camera systems, enable a host of new possibilities, which can vary strongly in cost. We point out cost savings potential without compromising safety requirements.

This contribution is unbiased – there will be no focus on specific features of the product offerings of any robot or safety equipment suppliers. Our attention is centered on the user and on the requirements that he needs to master for the safety-compliant realization of his application.},
	author = {Behnisch, Kevin and Matthias, Bjoern},
	month = jun,
	year = {2008},
	pages = {2--14}
}

@book{koubaa_robot_operating_system_2019,
	series = {Studies in {Computational} {Intelligence}},
	title = {Robot {Operating} {System} ({ROS}): {The} {Complete} {Reference} ({Volume} 3)},
	isbn = {978-3-319-91589-0},
	shorttitle = {Robot {Operating} {System} ({ROS})},
	abstract = {Building on the successful first and second volumes, this book is the third volume of the Springer book on the Robot Operating System (ROS): The Complete Reference. The Robot Operating System is evolving from year to year with a wealth of new contributed packages and enhanced capabilities. Further, the ROS is being integrated into various robots and systems and is becoming an embedded technology in emerging robotics platforms. The objective of this third volume is to provide readers with additional and comprehensive coverage of the ROS and an overview of the latest achievements, trends and packages developed with and for it. Combining tutorials, case studies, and research papers, the book consists of sixteen chapters and is divided into five parts. Part 1 presents multi-robot systems with the ROS. In Part 2, four chapters deal with the development of unmanned aerial systems and their applications. In turn, Part 3 highlights recent work related to navigation, motion planning and control. Part 4 discusses recently contributed ROS packages for security, ROS2, GPU usage, and real-time processing. Lastly, Part 5 deals with new interfaces allowing users to interact with robots. Taken together, the three volumes of this book offer a valuable reference guide for ROS users, researchers, learners and developers alike. Its breadth of coverage makes it a unique resource.},
	language = {en},
	urldate = {2020-06-07},
	publisher = {Springer International Publishing},
	editor = {Koubaa, Anis},
	year = {2019},
	doi = {10.1007/978-3-319-91590-6}
}

@misc{noauthor_ros_distributions_nodate,
	title = {Distributions - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Distributions},
	urldate = {2020-06-07}
}

@misc{noauthor_robot_operating_system_2020,
	title = {Robot {Operating} {System}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Robot_Operating_System&oldid=200591087},
	abstract = {Robot Operating System (ROS) ist ein Framework für persönliche Roboter. Die Entwicklung begann 2007 am Stanford Artificial Intelligence Laboratory im Rahmen des Stanford-AI-Robot-Projektes (STAIR) und wurde ab 2009 hauptsächlich am Robotikinstitut Willow Garage weiterentwickelt. Seit April 2012 wird ROS von der neu gegründeten, gemeinnützigen Organisation Open Source Robotics Foundation (OSRF) unterstützt und seit Beendigung der operativen Tätigkeit von Willow Garage 2013 von dieser koordiniert, gepflegt und weiterentwickelt. Seit 2013 beschäftigt sich das ROS Industrial Consortium mit der Förderung und Unterstützung von ROS für Anwendungen in der Industrierobotik. In Europa koordiniert das Fraunhofer IPA die Aktivitäten des ROS Industrial Consortium Europe.},
	language = {de},
	urldate = {2020-06-07},
	journal = {Wikipedia},
	month = jun,
	year = {2020},
	note = {Page Version ID: 200591087}
}

@article{pohl_robot_2014,
	title = {Robot {Operating} {System} ({ROS}): {Safe} \& {Insecure}},
	shorttitle = {Robot {Operating} {System} ({ROS})},
	abstract = {„Unsichere Software ist die Achillesferse der Industrie 4.0", warnt der Sicherheits-Experte Prof. Dr. Hartmut Pohl. Im Vorfeld der Automatica hat er exklusiv für die Automationspraxis das in der Servicerobotik beliebte Opensource-Roboterbetriebssystem ROS einer Sicherheitsprüfung unterzogen. Sein Fazit: „ROS als relativ junges System berücksichtigt weder beim Design noch bei der Implementierung Aspekte der Security. Auf der Basis von ROS entwickelte Systeme sind daher völlig unsicher.},
	journal = {Automationspraxis},
	author = {Pohl, Hartmut},
	month = may,
	year = {2014},
	pages = {5--7}
}

@article{pohl_robot_operating_system_2014,
	title = {Robot {Operating} {System} ({ROS}): {Safe} \& {Insecure}},
	shorttitle = {Robot {Operating} {System} ({ROS})},
	abstract = {„Unsichere Software ist die Achillesferse der Industrie 4.0", warnt der Sicherheits-Experte Prof. Dr. Hartmut Pohl. Im Vorfeld der Automatica hat er exklusiv für die Automationspraxis das in der Servicerobotik beliebte Opensource-Roboterbetriebssystem ROS einer Sicherheitsprüfung unterzogen. Sein Fazit: „ROS als relativ junges System berücksichtigt weder beim Design noch bei der Implementierung Aspekte der Security. Auf der Basis von ROS entwickelte Systeme sind daher völlig unsicher.},
	journal = {Automationspraxis},
	author = {Pohl, Hartmut},
	month = may,
	year = {2014}
}

@misc{noauthor_rosorg_is_ros_for_me_nodate,
	title = {{ROS}.org {\textbar} {Is} {ROS} {For} {Me}?},
	url = {https://www.ros.org/is-ros-for-me/},
	language = {en-US},
	urldate = {2020-06-07},
	note = {Library Catalog: www.ros.org}
}

@misc{noauthor_ros_2_features_nodate,
	title = {Features {Status}},
	url = {https://index.ros.org/doc/ros2/Features/#features},
	urldate = {2020-06-07}
}

@misc{noauthor_roboter_schnittstellen_nodate,
	title = {Roboter schneller programmieren},
	url = {https://www.industr.com/de/schnellere-entwicklung-anwendungen-robot-operating-system-ros-1712541},
	abstract = {Robotersysteme sind dank neuer Technologien auf dem Vormarsch. Sie einzurichten ist jedoch zeit- und kostenintensiv und nur für hohe Stückzahlen rentabel.},
	language = {de},
	urldate = {2020-06-07},
	journal = {https://www.industr.com},
	note = {Library Catalog: www.industr.com}
}

@misc{noauthor_ros-master-node-topicpng_nodate,
	title = {{ROS}-master-node-topic.png ({PNG}-{Grafik}, 1725 × 769 {Pixel})},
	url = {https://upload.wikimedia.org/wikipedia/commons/e/e7/ROS-master-node-topic.png},
	urldate = {2020-06-07}
}

@misc{noauthor_rosconcepts_nodate,
	title = {de/{ROS}/{Concepts} - {ROS} {Wiki}},
	url = {http://wiki.ros.org/de/ROS/Concepts},
	urldate = {2020-06-07}
}

@misc{noauthor_tof-kamera_2019,
	title = {{TOF}-{Kamera}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=TOF-Kamera&oldid=189220682},
	abstract = {TOF-Kameras sind 3D-Kamerasysteme, die mit dem Laufzeitverfahren (englisch: time of flight, TOF, auch ToF) Distanzen messen. Sie werden nach dem verwendeten PMD-Sensor auch PMD-Kameras genannt. Dazu wird die Szene mittels eines Lichtpulses ausgeleuchtet, und die Kamera misst für jeden Bildpunkt die Zeit, die das Licht bis zum Objekt und wieder zurück braucht. Die benötigte Zeit ist direkt proportional zur Distanz. Die Kamera liefert somit für jeden Bildpunkt die Entfernung des darauf abgebildeten Objektes. Das Prinzip entspricht dem Laserscanning mit dem Vorteil, dass eine ganze Szene auf einmal aufgenommen wird und nicht abgetastet werden muss.
TOF-Kameras sind im Gegensatz zu anderen Methoden eine relativ neue Entwicklung. Die Systeme können im Entfernungsbereich von einigen Dezimetern bis ca. 40 m eingesetzt werden. Die Distanzauflösung beträgt dabei etwa 1 cm, die lateralen Auflösungen erreichen etwa 200 × 200 Pixel. Ein Vorteil dieser Kameras ist die hohe Bildwiederholrate von bis zu 512 Bildern pro Sekunde.
Beispiele für TOF-Kameras},
	language = {de},
	urldate = {2020-06-08},
	journal = {Wikipedia},
	month = jun,
	year = {2019},
	note = {Page Version ID: 189220682}
}

@misc{noauthor_understanding_infrared_sensors_nodate,
	title = {Understanding {Active} \& {Passive} {Infrared} {Sensors} ({PIR}) and {Their} {Uses}},
	url = {https://www.arrow.com/en/research-and-events/articles/understanding-active-and-passive-infrared-sensors},
	abstract = {Infrared sensors are more common than most people realize. Learn about the differences between active and passive infrared sensors and their applications.},
	language = {en},
	urldate = {2020-06-08},
	journal = {Arrow.com},
	note = {Library Catalog: www.arrow.com}
}

@misc{noauthor_azure_kinect_2020,
	title = {Azure {Kinect}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Azure_Kinect&oldid=945489630},
	abstract = {The Azure Kinect DK is a developer kit and PC peripheral which employs the use of artificial intelligence (AI) sensors for computer vision and speech models. It is the successor to the Microsoft Kinect line of sensors, and is now connected to the Microsoft Azure cloud. It is based on the depth sensor presented during 2018 ISSCC.The Azure Kinect retails for \$399.00 in the US and China. Based on a recent announcement, devices will also start shipping to the UK, Germany, and Japan in March 2020. The kit includes a 12 megapixel RGB camera supplemented by 1 megapixel-depth camera for body tracking. It also has a 360-degree seven-microphone array and an orientation sensor.While the previous iteration of Microsoft's Kinect is primarily focused on gaming, the device is aimed at broad-based enterprise users and is also targeted towards other markets such as logistics, robotics, health care, and retail. With the kit, developers are expected to develop corporate applications connected to Microsoft's cloud and AI technologies. The Azure Kinect is also used in volumetric capture workflows through the use of software tools such as Depthkit or EF EVE which allows the highest number of Azure Kinects to be connected into one consumer friendly volumetric capture rig. These software allow users to create interactive virtual reality experiences with human performances.},
	language = {en},
	urldate = {2020-06-08},
	journal = {Wikipedia},
	month = mar,
	year = {2020},
	note = {Page Version ID: 945489630}
}

@misc{noauthor_azure_kinect_dk_nodate,
	title = {Azure {Kinect} {DK} – {Develop} {AI} {Models} {\textbar} {Microsoft} {Azure}},
	url = {https://azure.microsoft.com/en-us/services/kinect-dk/},
	abstract = {Developers: Build advanced computer vision and speech models with a 1-MP depth sensor,
12-MP RGB camera, and 7-mic audio array in a single device.},
	language = {en},
	urldate = {2020-06-08},
	note = {Library Catalog: azure.microsoft.com}
}

@misc{tesych_azure_nodate,
	title = {Azure {Kinect} {DK} hardware specifications},
	url = {https://docs.microsoft.com/en-us/azure/kinect-dk/hardware-specification},
	abstract = {Understand the components, specifications, and capabilities of the Azure Kinect DK.},
	language = {en-us},
	urldate = {2020-06-08},
	author = {tesych},
	note = {Library Catalog: docs.microsoft.com}
}

@misc{noauthor_widowx_200_nodate,
	title = {{WidowX} 200 {Robot} {Arm} - {X}-{Series} {Robotic} {Arm}},
	url = {https://www.trossenrobotics.com/widowx-200-robot-arm.aspx},
	urldate = {2020-06-11}
}

@misc{qm13_azure_joints_nodate,
	title = {Azure {Kinect} body tracking joints},
	url = {https://docs.microsoft.com/en-us/azure/kinect-dk/body-joints},
	abstract = {Understand the body frame, joints, joint coordinates, and joint hierarchy in the Azure Kinect DK.},
	language = {en-us},
	urldate = {2020-06-11},
	author = {qm13},
	note = {Library Catalog: docs.microsoft.com}
}

@misc{noauthor_microsoftazure-kinect-sensor-sdk_2020,
	title = {microsoft/{Azure}-{Kinect}-{Sensor}-{SDK}},
	copyright = {MIT},
	url = {https://github.com/microsoft/Azure-Kinect-Sensor-SDK},
	abstract = {A cross platform (Linux and Windows) user mode SDK to read data from your Azure Kinect device.},
	urldate = {2020-06-11},
	publisher = {Microsoft},
	month = jun,
	year = {2020},
	note = {original-date: 2018-12-10T17:50:05Z},
	keywords = {kinect, sdk}
}

@misc{qm13_azure_kinect_release_notes_nodate,
	title = {Azure {Kinect} {Body} {Tracking} {SDK} download},
	url = {https://docs.microsoft.com/en-us/azure/kinect-dk/body-sdk-download},
	abstract = {Understand how to download each version of the Azure Kinect Sensor SDK on Windows or Linux.},
	language = {en-us},
	urldate = {2020-06-11},
	author = {qm13},
	note = {Library Catalog: docs.microsoft.com}
}

@book{osterrieder_komponentenmodelle_2004,
	title = {Komponentenmodelle für {Web}-{Anwendungen}},
	isbn = {978-3-8324-8119-3},
	abstract = {Inhaltsangabe:Zusammenfassung: Die Diplomarbeit vergleicht die de-facto-Standards der komponentenbasierten Softwareentwicklung und die Spezifikationen und Frameworks zur Entwicklung von Web-Anwendungen, die mit den untersuchten Komponentenmodellen in Verbindung stehen. Um die Ziele dieser Diplomarbeit zu erreichen, wurden im Kapitel 2 die Grundlagen der komponentenbasierten Softwareentwicklung vorgestellt. Anschließend wurde ein Überblick über die Komponentenmodelle und Spezifikationen der de-facto-Standards CORBA, der Enterprise JavaBeans, des .NET Frameworks und der Web-Services gegeben. Das Kapitel 2 schließt mit einem Vergleich der vorgestellten Komponentenmodelle, welcher durch eine tabellarische Übersicht verdeutlicht wurde. Kapitel 3 beschäftigt sich in erster Linie mit Grundlagen und Architekturen von Web-Anwendungen. Dabei wurden die wichtigsten Anforderungen an Web-Anwendungen beschrieben, welche als typische Eigenschaften von Web-Anwendungen gesehen werden können. Diese Anforderungen wurden in einem Kriterienkatalog zusammengefasst. Er gilt als Verlgleichsgrundlage der beschriebenen Techniken. Ein Überblick über die Architekturen von Web-Anwendungen schafft einen Einblick in mehrschichtige Architekturen und deren Middleware. Ein oft verwendetes Entwurfsmuster für Architekturen von Web-Anwendungen ist das Model-View-Controller-Muster, welches abschließend in Kapitel 3 beschrieben wurde. In Kapitel 4 wurden die Spezifikationen und Frameworks der beschriebenen Komponentenmodelle, im Zusammenhang mit Web-Anwendungen, näher untersucht. Die Untersuchungen beziehen sich auf die Architekturen der jeweiligen Spezifikationen und Frameworks und deren Lösungsstrategien um den in Kapitel 3 gefundenen Anforderungen aus dem Kriterienkatalog gerecht zu werden. Praktisches Ziel der Diplomarbeit war die Entwicklung einer komponentenbasierten Web-Anwendung in Form eines Terminkalenders. Die dazu notwendigen Aktionen sind in Kapitel 5 zusammengefasst. Dazu wurde zuerst die zu entwickelnde Web-Anwendung spezifiziert, indem funktionale und nicht-funktionale Anforderungen an die Anwendung erhoben wurden. Anschließend erfolgte eine Auseinandersetzung mit den Vor- und Nachteilen der vorgestellten Techniken von CORBA, der J2EE Spezifikation, dem .NET Framework und er Web-Services um ein geeignetes Komponentenmodell für den Terminkalender zu finden. Die Entscheidung fiel auf die J2EE Spezifikation und Web-Services. Die restlichen Abschnitte beschreiben [...]},
	language = {de},
	publisher = {diplom.de},
	author = {Osterrieder, Christian},
	month = jul,
	year = {2004},
	note = {Google-Books-ID: dSpqAQAAQBAJ},
	keywords = {Computers / Internet / General},
	pages = {80--86}
}

@book{kircher_it_2006,
	title = {{IT}: {Technologien}, {Lösungen}, {Innovationen}},
	isbn = {978-3-540-46164-7},
	shorttitle = {{IT}},
	abstract = {IT ist das Zauberwort unserer Zeit. Viele Fragen, die sich für Unternehmen in der globalisierten Welt stellen, finden ihre Lösungen im optimierten Einsatz von IT-Technologien. Ohne IT ist es nicht mehr möglich, die für die Überlebensfähigkeit eines Unternehmens und dessen Erfolg notwendigen Innovationen zu erreichen. Führende Experten aus einem der renommiertesten europäischen Entwicklungszentren gehen auf die wichtigsten technologischen Entwicklungen ein und erläutern deren Umsetzung für Unternehmen im Wettbewerb. Besondere Betonung liegt dabei auf dem Aspekt der IT als Innovationsmotor. Das Buch gibt gleichzeitig einen fundierten Überblick über die wichtigsten IT-Technologien, die heute und in naher Zukunft in zum Einsatz kommen.},
	language = {de},
	publisher = {Springer Science \& Business Media},
	author = {Kircher, Herbert},
	month = nov,
	year = {2006},
	note = {Google-Books-ID: 1DSyRjeHrXYC},
	keywords = {Computers / Information Technology, Computers / System Administration / Storage \& Retrieval, Business \& Economics / General, Business \& Economics / Management, Business \& Economics / Production \& Operations Management, Business \& Economics / Purchasing \& Buying},
	pages = {8--15}
}

@article{brauer_gestenerkennung_nodate,
	title = {Gestenerkennung mit einem {Datenhandschuh}},
	language = {de},
	author = {Brauer, Volker}
}

@misc{noauthor_lxc_2020,
	title = {{LXC}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=LXC&oldid=199359030},
	abstract = {LXC (Linux Containers) ist ein Verfahren zur Virtualisierung auf Betriebssystemebene, das mehrere voneinander isoliert laufende Linux-Systeme auf einem einzigen Host ermöglicht.},
	language = {de},
	urldate = {2020-06-14},
	journal = {Wikipedia},
	month = apr,
	year = {2020},
	note = {Page Version ID: 199359030}
}

@misc{noauthor_lxc_2017,
	title = {{LXC} und {LXD}: was sind {Linux} {Container}? - {Cloud} \& {Hosting}},
	shorttitle = {{LXC} und {LXD}},
	url = {https://www.webhod.de/lxc-und-lxd-was-sind-linux-container/},
	abstract = {LXC, LXC, Docker oder doch CoreOS? Wo liegen hier die Unterschiede? Wir haben einige Informationen zu Linux Container für Sie zusammengestellt.},
	language = {de-DE},
	urldate = {2020-06-14},
	journal = {Hosted Exchange, Office 365 und hybrid Office 365},
	month = dec,
	year = {2017},
	note = {Library Catalog: www.webhod.de
Section: Cloud \& Hosting}
}
